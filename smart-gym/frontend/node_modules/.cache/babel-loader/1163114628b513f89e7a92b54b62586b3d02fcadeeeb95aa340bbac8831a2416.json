{"ast":null,"code":"var _jsxFileName = \"/Users/ericlarwa/Desktop/SmartGym/group-project-smart-gym-companion-application/smart-gym/frontend/src/landing/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./MainPage.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  // State Variables\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [todayWorkouts, setTodayWorkouts] = useState(\"Loading workouts...\");\n  const [todayCalories, setTodayCalories] = useState(\"Loading calories...\");\n  const navigate = useNavigate();\n\n  // Fetch current date\n  useEffect(() => {\n    const dateOptions = {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\"\n    };\n    setCurrentDate(new Date().toLocaleDateString(\"en-US\", dateOptions));\n    updateTodaySummary();\n  }, []);\n\n  // Fetch today's workout and calorie data from an API\n  const updateTodaySummary = async () => {\n    try {\n      const today = new Date().toISOString().split(\"T\")[0];\n\n      // Fetch workouts\n      const workoutResponse = await axios.get(`/api/workouts?date=${today}`);\n      if (workoutResponse.data.length > 0) {\n        setTodayWorkouts(workoutResponse.data.map(w => `• ${w.type} (${w.duration} mins)`).join(\"\\n\"));\n      } else {\n        setTodayWorkouts(\"No workouts logged today\");\n      }\n\n      // Fetch calorie intake\n      const calorieResponse = await axios.get(`/api/calories?date=${today}`);\n      setTodayCalories(calorieResponse.data.totalCalories ? `Total Calories Today: ${calorieResponse.data.totalCalories}` : \"No calories logged today\");\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setTodayWorkouts(\"Error loading workouts\");\n      setTodayCalories(\"Error loading calories\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todayWorkouts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todayCalories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/workout-log\"),\n      children: \"Workout Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/calorie-tracker\"),\n      children: \"Calorie Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/progress-report\"),\n      children: \"Progress Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"KNWopQWooJUGpejZvQi5qxhNLD8=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","MainPage","_s","currentDate","setCurrentDate","todayWorkouts","setTodayWorkouts","todayCalories","setTodayCalories","navigate","dateOptions","weekday","month","day","year","Date","toLocaleDateString","updateTodaySummary","today","toISOString","split","workoutResponse","get","data","length","map","w","type","duration","join","calorieResponse","totalCalories","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ericlarwa/Desktop/SmartGym/group-project-smart-gym-companion-application/smart-gym/frontend/src/landing/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./MainPage.css\";\nimport axios from \"axios\"; \n\n\nconst MainPage = () => {\n    // State Variables\n    const [currentDate, setCurrentDate] = useState(\"\");\n    const [todayWorkouts, setTodayWorkouts] = useState(\"Loading workouts...\");\n    const [todayCalories, setTodayCalories] = useState(\"Loading calories...\");\n    const navigate = useNavigate();\n\n    // Fetch current date\n    useEffect(() => {\n        const dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\", year: \"numeric\" };\n        setCurrentDate(new Date().toLocaleDateString(\"en-US\", dateOptions));\n        updateTodaySummary();\n    }, []);\n\n    // Fetch today's workout and calorie data from an API\n    const updateTodaySummary = async () => {\n        try {\n            const today = new Date().toISOString().split(\"T\")[0];\n\n            // Fetch workouts\n            const workoutResponse = await axios.get(`/api/workouts?date=${today}`);\n            if (workoutResponse.data.length > 0) {\n                setTodayWorkouts(workoutResponse.data.map(w => `• ${w.type} (${w.duration} mins)`).join(\"\\n\"));\n            } else {\n                setTodayWorkouts(\"No workouts logged today\");\n            }\n\n            // Fetch calorie intake\n            const calorieResponse = await axios.get(`/api/calories?date=${today}`);\n            setTodayCalories(calorieResponse.data.totalCalories ? `Total Calories Today: ${calorieResponse.data.totalCalories}` : \"No calories logged today\");\n\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n            setTodayWorkouts(\"Error loading workouts\");\n            setTodayCalories(\"Error loading calories\");\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            {/* Display Current Date */}\n            <h2>{currentDate}</h2>\n\n            {/* Summary Section */}\n            <p>{todayWorkouts}</p>\n            <p>{todayCalories}</p>\n\n            {/* Navigation Buttons */}\n            <button onClick={() => navigate(\"/workout-log\")}>Workout Log</button>\n            <button onClick={() => navigate(\"/calorie-tracker\")}>Calorie Tracker</button>\n            <button onClick={() => navigate(\"/progress-report\")}>Progress Report</button>\n        </div>\n    );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}