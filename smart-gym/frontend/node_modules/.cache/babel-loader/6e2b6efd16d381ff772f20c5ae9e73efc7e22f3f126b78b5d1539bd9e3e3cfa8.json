{"ast":null,"code":"var _jsxFileName = \"/Users/ericlarwa/Desktop/SmartGym/group-project-smart-gym-companion-application/smart-gym/frontend/src/landing/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./MainPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState(\"\");\n  const [todayWorkouts, setTodayWorkouts] = useState(\"Loading workouts...\");\n  const [todayCalories, setTodayCalories] = useState(\"Loading calories...\");\n  const navigate = useNavigate();\n\n  // Update current date and time every second\n  useEffect(() => {\n    const updateDateTime = () => {\n      const now = new Date();\n      const formattedDate = now.toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        month: \"long\",\n        day: \"numeric\",\n        year: \"numeric\"\n      });\n      const formattedTime = now.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n      });\n      setCurrentDateTime(`${formattedDate} | ${formattedTime}`);\n    };\n    updateDateTime();\n    const interval = setInterval(updateDateTime, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fetch today's workout and calorie data\n  useEffect(() => {\n    updateTodaySummary();\n  }, []);\n  const updateTodaySummary = async () => {\n    try {\n      const today = new Date().toISOString().split(\"T\")[0];\n\n      // Fetch workouts\n      const workoutResponse = await axios.get(`/api/workouts?date=${today}`);\n      setTodayWorkouts(workoutResponse.data.length > 0 ? workoutResponse.data.map(w => `• ${w.type} (${w.duration} mins)`).join(\"\\n\") : \"No workouts logged today\");\n\n      // Fetch calorie intake\n      const calorieResponse = await axios.get(`/api/calories?date=${today}`);\n      setTodayCalories(calorieResponse.data.totalCalories ? `Total Calories Today: ${calorieResponse.data.totalCalories}` : \"No calories logged today\");\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setTodayWorkouts(\"Error loading workouts\");\n      setTodayCalories(\"Error loading calories\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Smart Gym Companion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/workout-log\"),\n          children: \"Workout Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/calorie-tracker\"),\n          children: \"Calorie Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/progress-report\"),\n          children: \"Progress Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Smart Gym Companion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date-time\",\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Today's Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todayWorkouts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todayCalories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"+HGOcBfGLsxnFndGygT2h963VzM=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","MainPage","_s","currentDateTime","setCurrentDateTime","todayWorkouts","setTodayWorkouts","todayCalories","setTodayCalories","navigate","updateDateTime","now","Date","formattedDate","toLocaleDateString","weekday","month","day","year","formattedTime","toLocaleTimeString","hour","minute","second","interval","setInterval","clearInterval","updateTodaySummary","today","toISOString","split","workoutResponse","get","data","length","map","w","type","duration","join","calorieResponse","totalCalories","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ericlarwa/Desktop/SmartGym/group-project-smart-gym-companion-application/smart-gym/frontend/src/landing/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./MainPage.css\";\n\nconst MainPage = () => {\n    const [currentDateTime, setCurrentDateTime] = useState(\"\");\n    const [todayWorkouts, setTodayWorkouts] = useState(\"Loading workouts...\");\n    const [todayCalories, setTodayCalories] = useState(\"Loading calories...\");\n    const navigate = useNavigate();\n\n    // Update current date and time every second\n    useEffect(() => {\n        const updateDateTime = () => {\n            const now = new Date();\n            const formattedDate = now.toLocaleDateString(\"en-US\", { weekday: \"long\", month: \"long\", day: \"numeric\", year: \"numeric\" });\n            const formattedTime = now.toLocaleTimeString(\"en-US\", { hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\" });\n            setCurrentDateTime(`${formattedDate} | ${formattedTime}`);\n        };\n\n        updateDateTime();\n        const interval = setInterval(updateDateTime, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    // Fetch today's workout and calorie data\n    useEffect(() => {\n        updateTodaySummary();\n    }, []);\n\n    const updateTodaySummary = async () => {\n        try {\n            const today = new Date().toISOString().split(\"T\")[0];\n\n            // Fetch workouts\n            const workoutResponse = await axios.get(`/api/workouts?date=${today}`);\n            setTodayWorkouts(workoutResponse.data.length > 0\n                ? workoutResponse.data.map(w => `• ${w.type} (${w.duration} mins)`).join(\"\\n\")\n                : \"No workouts logged today\"\n            );\n\n            // Fetch calorie intake\n            const calorieResponse = await axios.get(`/api/calories?date=${today}`);\n            setTodayCalories(calorieResponse.data.totalCalories\n                ? `Total Calories Today: ${calorieResponse.data.totalCalories}`\n                : \"No calories logged today\"\n            );\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n            setTodayWorkouts(\"Error loading workouts\");\n            setTodayCalories(\"Error loading calories\");\n        }\n    };\n\n    return (\n        <div className=\"main-container\">\n            {/* Navigation Bar */}\n            <nav className=\"navbar\">\n                <h1 className=\"logo\">Smart Gym Companion</h1>\n                <div className=\"nav-links\">\n                    <button onClick={() => navigate(\"/workout-log\")}>Workout Log</button>\n                    <button onClick={() => navigate(\"/calorie-tracker\")}>Calorie Tracker</button>\n                    <button onClick={() => navigate(\"/progress-report\")}>Progress Report</button>\n                </div>\n            </nav>\n\n            {/* Page Content - Left Aligned */}\n            <div className=\"content\">\n                <div className=\"left-section\">\n                    <h2>Welcome to Smart Gym Companion</h2>\n                    <p className=\"date-time\">{currentDateTime}</p>\n\n                    <div className=\"summary-card\">\n                        <h3>Today's Summary</h3>\n                        <p>{todayWorkouts}</p>\n                        <p>{todayCalories}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MainPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}